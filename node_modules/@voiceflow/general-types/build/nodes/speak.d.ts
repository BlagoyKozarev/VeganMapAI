import { CanvasNodeVisibility, Prompt } from "../types";
import { DefaultNode, DefaultStep, NodeID, NodeType, TraceFrame as DefaultTraceFrame, TraceType } from './types';
export declare type StepData<V> = {
    dialogs: Prompt<V>[];
    randomize: boolean;
    canvasVisibility?: CanvasNodeVisibility;
};
export declare type NodeData = {
    prompt?: string;
    nextId?: NodeID;
} & ({
    speak: string;
} | {
    random_speak: string[];
});
export declare enum SpeakType {
    AUDIO = "audio",
    MESSAGE = "message"
}
export declare type Step<V> = DefaultStep<NodeType.SPEAK, StepData<V>>;
export declare type Node = DefaultNode<NodeType.SPEAK, NodeData>;
export declare type TraceFrame = DefaultTraceFrame<TraceType.SPEAK, {
    message: string;
    type: SpeakType;
    voice?: string;
    src?: string | null;
}>;
