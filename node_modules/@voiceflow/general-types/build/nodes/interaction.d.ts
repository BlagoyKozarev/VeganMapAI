import { SlotMapping } from '@voiceflow/api-sdk';
import { Chip, NoMatches, Prompt } from "../types";
import { DefaultNode, DefaultStep, Event, NodeID, NodeType, TraceFrame as DefaultTraceFrame, TraceType } from './types';
export declare enum ElseType {
    PATH = "path",
    REPROMPT = "reprompt"
}
export declare type ElseData<V> = NoMatches<V> & {
    type: ElseType;
};
export declare type Choice = {
    intent: string;
    mappings?: SlotMapping[];
};
export declare type StepData<V> = {
    name: string;
    else: ElseData<V>;
    choices: Choice[];
    reprompt: Prompt<V> | null;
    chips: Chip[] | null;
};
export declare type IntentEvent = {
    intent: string;
    mappings?: SlotMapping[];
};
export declare type NodeData<E = Event> = {
    reprompt?: string;
    noMatches?: string[];
    interactions: {
        event: E;
        nextId: string | null;
    }[];
    elseId?: NodeID | null;
    chips?: Chip[];
};
export declare type Step<V> = DefaultStep<NodeType.INTERACTION, StepData<V>>;
export declare type Node = DefaultNode<NodeType.INTERACTION, NodeData>;
export declare type TraceFrame = DefaultTraceFrame<TraceType.CHOICE, {
    choices: {
        intent?: string;
        name: string;
    }[];
}>;
