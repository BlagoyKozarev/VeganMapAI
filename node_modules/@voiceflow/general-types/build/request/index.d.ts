export declare enum RequestType {
    INTENT = "intent",
    TEXT = "text",
    LAUNCH = "launch"
}
export interface Request<T extends string = string, P = unknown> {
    type: T;
    payload: P;
}
export declare type VerboseValue = {
    rawText: string;
    canonicalText: string;
    startIndex: number;
};
export declare type Entity = {
    name: string;
    value: string;
    verboseValue?: VerboseValue[];
    query?: string;
};
export declare type LaunchRequest = Request<RequestType.LAUNCH, undefined>;
export declare type TextRequest = Request<RequestType.TEXT, string>;
export declare type IntentRequest = Request<RequestType.INTENT, {
    query: string;
    intent: {
        name: string;
    };
    entities: Entity[];
    confidence?: number;
}>;
