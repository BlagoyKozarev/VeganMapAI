import { Config as DataConfig } from '@voiceflow/general-types';
import { State } from '@voiceflow/runtime';
import { AxiosRequestConfig } from 'axios';
import Client from "../Client";
import RuntimeClient from "../RuntimeClient";
export declare type FactoryConfig<S extends State['variables']> = {
    versionID: string;
    apiKey: string;
    endpoint?: string;
    dataConfig?: DataConfig;
    variables?: Partial<S>;
    axiosConfig?: AxiosRequestConfig;
};
export declare class RuntimeClientFactory<S extends Record<string, any> = Record<string, any>> {
    client: Client<S>;
    private dataConfig;
    private defaultState;
    constructor({ versionID, endpoint, apiKey, dataConfig, variables, axiosConfig }: FactoryConfig<S>);
    createClient(state?: State): RuntimeClient<S>;
}
export default RuntimeClientFactory;
