import { State } from '@voiceflow/runtime';
import { AxiosRequestConfig } from 'axios';
import { RequestContext, ResponseContext } from "../types";
export declare type ClientConfig<S> = {
    variables?: Partial<S>;
    endpoint: string;
    versionID: string;
    apiKey: string;
    axiosConfig?: AxiosRequestConfig;
};
export declare class Client<S extends Record<string, any> = Record<string, any>> {
    private axios;
    private versionID;
    private cachedInitState;
    private initVariables;
    constructor({ variables, endpoint, versionID, apiKey, axiosConfig }: ClientConfig<S>);
    getInitialState(): Promise<State>;
    interact(body: RequestContext): Promise<ResponseContext>;
    getVersionID(): string;
    static isAPIKey(authorization?: string): boolean;
}
export default Client;
