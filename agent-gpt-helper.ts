// agent-gpt-helper.ts

// üîê –ò–∑–ø–æ–ª–∑–≤–∞–º–µ OPENAI_API_KEY (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏—è—Ç secret –≤ Replit)
const OPENAI_API_KEY = process.env.OPENAI_API_KEY;

/**
 * –ò–∑–ø—Ä–∞—â–∞ –≤—ä–ø—Ä–æ—Å –∫—ä–º GPT-4o
 */
async function askGPT(userPrompt: string): Promise<string> {
  if (!OPENAI_API_KEY) {
    return "‚ùå –ù—è–º–∞ –∑–∞–¥–∞–¥–µ–Ω OPENAI_API_KEY. –ü—Ä–æ–≤–µ—Ä–∏ Replit secrets.";
  }

  try {
    const response = await fetch('https://api.openai.com/v1/chat/completions', {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${OPENAI_API_KEY}`,
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        model: "gpt-4o", // –Ω–∞–π-–Ω–æ–≤–∏—è—Ç OpenAI –º–æ–¥–µ–ª
        messages: [
          {
            role: "system",
            content: "–¢–∏ —Å–∏ AI –ø–æ–º–æ—â–Ω–∏–∫, –∫–æ–π—Ç–æ –ø–æ–º–∞–≥–∞ –Ω–∞ –∞–≥–µ–Ω—Ç –ø—Ä–∏ –∑–∞—Ç—Ä—É–¥–Ω–µ–Ω–∏—è —Å –∫–æ–¥, –ª–æ–≥–∏–∫–∞ –∏–ª–∏ –≥—Ä–µ—à–∫–∏. –î–∞–π —è—Å–Ω–∏, –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏ —Å—Ç—ä–ø–∫–∏ –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –Ω–∞ –±—ä–ª–≥–∞—Ä—Å–∫–∏ –µ–∑–∏–∫."
          },
          {
            role: "user",
            content: userPrompt
          }
        ],
        temperature: 0.7,
        max_tokens: 1000
      })
    });

    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }

    const data = await response.json();
    return data.choices[0].message.content.trim();
  } catch (error: any) {
    console.error("‚ùå GPT –≥—Ä–µ—à–∫–∞:", error.message);
    return `‚ö†Ô∏è –í—ä–∑–Ω–∏–∫–Ω–∞ –≥—Ä–µ—à–∫–∞ –ø—Ä–∏ –∫–æ–Ω—Ç–∞–∫—Ç —Å GPT: ${error.message}`;
  }
}

/**
 * –°—ä–±–∏—Ä–∞ —Ç–µ–∫—É—â–∏ –ª–æ–≥–æ–≤–µ –∏ –≥—Ä–µ—à–∫–∏ –æ—Ç —Å–∏—Å—Ç–µ–º–∞—Ç–∞
 */
function collectSystemLogs(): string {
  // –¢—É–∫ –º–æ–∂–µ–º –¥–∞ –¥–æ–±–∞–≤–∏–º —Ä–µ–∞–ª–Ω–∏ –ª–æ–≥–æ–≤–µ –æ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ—Ç–æ
  const recentLogs = [
    "TTS —Ñ—É–Ω–∫—Ü–∏—è—Ç–∞ –Ω–µ —Å–µ –∏–∑–≤–∏–∫–≤–∞ –≤—ä–æ–±—â–µ",
    "speakText –ª–æ–≥–æ–≤–µ—Ç–µ –Ω–µ —Å–µ –ø–æ—è–≤—è–≤–∞—Ç –≤ console",
    "Voice chat –∑–∞–ø–∏—Å–≤–∞ –∏ —Ä–∞–∑–±–∏—Ä–∞, –Ω–æ –Ω—è–º–∞ –∑–≤—É–∫–æ–≤ –æ—Ç–≥–æ–≤–æ—Ä",
    "SpeechSynthesis API –µ –¥–æ—Å—Ç—ä–ø–µ–Ω –Ω–æ –Ω–µ —Ä–∞–±–æ—Ç–∏"
  ];
  
  return recentLogs.join("\n");
}

/**
 * –ì–ª–∞–≤–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è –∑–∞ –ø–æ–º–æ—â –æ—Ç GPT –ø—Ä–∏ –∑–∞—Ç—Ä—É–¥–Ω–µ–Ω–∏—è
 */
export async function requestGPTHelp(problem: string): Promise<string> {
  const systemLogs = collectSystemLogs();
  
  const gptPrompt = `
–ê–≥–µ–Ω—Ç—ä—Ç —Å–µ –∑–∞—Ç—Ä—É–¥–Ω–∏ —Å –ø—Ä–æ–±–ª–µ–º –≤ VeganMapAI –ø—Ä–æ–µ–∫—Ç–∞:

–ü–†–û–ë–õ–ï–ú: ${problem}

–¢–ï–ö–£–©–ò –õ–û–ì–û–í–ï:
${systemLogs}

–ö–û–ù–¢–ï–ö–°–¢: 
- React + TypeScript –ø—Ä–æ–µ–∫—Ç
- Voice chat —Å OpenAI Whisper —Ä–∞–±–æ—Ç–∏ (–∑–∞–ø–∏—Å + —Ä–∞–∑–±–∏—Ä–∞–Ω–µ)
- Text-to-Speech (TTS) –Ω–µ —Ä–∞–±–æ—Ç–∏ –≤—ä–ø—Ä–µ–∫–∏ —á–µ SpeechSynthesis API –µ –¥–æ—Å—Ç—ä–ø–µ–Ω
- –§—É–Ω–∫—Ü–∏—è—Ç–∞ speakText() —Å—ä—â–µ—Å—Ç–≤—É–≤–∞ –Ω–æ –Ω–µ —Å–µ –∏–∑–≤–∏–∫–≤–∞

–ú–æ–ª—è –¥–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏ —Å—Ç—ä–ø–∫–∏ –∑–∞ —Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞.
  `;

  const gptResponse = await askGPT(gptPrompt);
  return `ü§ñ GPT —Å—ä–≤–µ—Ç:\n${gptResponse}`;
}

/**
 * –ë—ä—Ä–∑–∞ –ø–æ–º–æ—â –∑–∞ —á–µ—Å—Ç–æ —Å—Ä–µ—â–∞–Ω–∏ –ø—Ä–æ–±–ª–µ–º–∏
 */
export async function quickGPTHelp(issueType: 'tts' | 'voice' | 'api' | 'general'): Promise<string> {
  const prompts = {
    tts: "TTS –Ω–µ —Ä–∞–±–æ—Ç–∏ –≤ –±—Ä–∞—É–∑—ä—Ä - SpeechSynthesis API –µ –¥–æ—Å—Ç—ä–ø–µ–Ω –Ω–æ speakText —Ñ—É–Ω–∫—Ü–∏—è—Ç–∞ –Ω–µ —Å–µ –∏–∑–≤–∏–∫–≤–∞. –ö–∞–∫ –¥–∞ –¥–µ–±—ä–≥–Ω–∞?",
    voice: "Voice chat –∑–∞–ø–∏—Å–≤–∞ –∏ —Ä–∞–∑–±–∏—Ä–∞ —Ç–µ–∫—Å—Ç –Ω–æ –Ω—è–º–∞ –∑–≤—É–∫–æ–≤ –æ—Ç–≥–æ–≤–æ—Ä. –ü—Ä–æ–±–ª–µ–º—ä—Ç –µ –≤ TTS —á–∞—Å—Ç—Ç–∞.",
    api: "API –∏–∑–≤–∏–∫–≤–∞–Ω–∏—è —Ä–∞–±–æ—Ç—è—Ç –Ω–æ —Ä–µ–∑—É–ª—Ç–∞—Ç–∏—Ç–µ –Ω–µ —Å–µ –æ–±—Ä–∞–±–æ—Ç–≤–∞—Ç –ø—Ä–∞–≤–∏–ª–Ω–æ –≤ frontend.",
    general: "–û–±—â –ø—Ä–æ–±–ª–µ–º —Å –¥–µ–±—ä–≥–≤–∞–Ω–µ –Ω–∞ React TypeScript –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ."
  };

  return await requestGPTHelp(prompts[issueType]);
}

// –ó–∞ —Ç–µ—Å—Ç–≤–∞–Ω–µ - –º–æ–∂–µ–º –¥–∞ –∏–∑–ø–æ–ª–∑–≤–∞–º–µ –≤ browser console
if (typeof window !== 'undefined') {
  (window as any).requestGPTHelp = requestGPTHelp;
  (window as any).quickGPTHelp = quickGPTHelp;
}