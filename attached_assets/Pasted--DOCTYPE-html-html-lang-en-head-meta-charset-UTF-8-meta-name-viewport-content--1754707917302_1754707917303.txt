<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>VeganMapAI – Mock Step 1 (CTA + Navigation)</title>
  <style>
    /* Minimal, monochrome, agent-like (GPT-ish) UI */
    :root {
      --bg: #0f1115;          /* neutral dark background */
      --surface: #14171c;     /* cards / header */
      --muted: #9aa3af;       /* secondary text */
      --text: #e5e7eb;        /* primary text */
      --line: #242833;        /* subtle borders */
      --accent: #22c55e;      /* very sparing use */
      --focus: #3b82f6;       /* focus ring (subtle) */
    }
    * { box-sizing: border-box; }
    body {
      margin: 0; font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Inter, Arial, sans-serif;
      background: var(--bg); color: var(--text); line-height: 1.5;
    }
    a { color: inherit; text-decoration: none; }

    /* Header */
    .header {
      position: sticky; top: 0; z-index: 1000;
      background: var(--surface);
      border-bottom: 1px solid var(--line);
    }
    .container { max-width: 1200px; margin: 0 auto; padding: 0 16px; }
    .row { display: flex; align-items: center; justify-content: space-between; gap: 16px; height: 64px; }
    .brand { display: flex; align-items: center; gap: 10px; font-weight: 800; letter-spacing: .2px; }
    .brand .dot { width: 8px; height: 8px; border-radius: 50%; background: #cbd5e1; }

    nav { display: flex; align-items: center; gap: 18px; }
    .nav-link { padding: 8px 10px; border-radius: 8px; color: var(--muted); font-weight: 600; }
    .nav-link.active { color: #fff; background: #1a1e26; }

    .btn { display: inline-flex; align-items: center; gap: 8px; border-radius: 10px; font-weight: 700; border: 1px solid var(--line); padding: 10px 14px; background: #0f1115; color: #eef2f7; }
    .btn:hover { background: #0c0e12; }
    .btn:focus { outline: 2px solid var(--focus); outline-offset: 2px; }

    /* “AI Search” – compact, monochrome */
    .btn-ai { border: 1px solid var(--line); background: #0f1115; }
    .btn-ai span.icon { display:inline-block; width: 16px; height: 16px; border-radius: 4px; background: #cbd5e1; }

    .btn-primary { background: #1a1e26; }
    .btn-primary:hover { background: #161a21; }

    /* Mobile */
    .menu-btn { display: none; border: 1px solid var(--line); border-radius: 8px; padding: 8px 10px; background: transparent; color: var(--text); }
    @media (max-width: 900px) {
      nav { display: none; }
      .menu-btn { display: inline-flex; }
      .mobile-menu { display: none; position: fixed; inset: 64px 12px auto 12px; background: var(--surface); border: 1px solid var(--line); border-radius: 12px; padding: 12px; }
      .mobile-menu.open { display: block; }
      .mobile-menu a { display: block; padding: 12px; border-radius: 8px; color: var(--muted); }
      .mobile-menu a.active { color: #fff; background: #1a1e26; }
    }

    /* Hero */
    .hero { padding: 48px 0 24px; border-bottom: 1px solid var(--line); }
    .hero-grid { display: grid; grid-template-columns: 1fr; gap: 16px; }
    .hero h1 { font-size: clamp(26px, 4.2vw, 44px); margin: 0 0 8px; letter-spacing: .1px; }
    .hero p { color: var(--muted); margin: 0 0 16px; }
    .hero-ctas { display: flex; gap: 10px; flex-wrap: wrap; }

    /* Sections */
    section { padding: 40px 0; }
    .section-title { font-size: 22px; margin: 0 0 12px; }
    .card { background: var(--surface); border: 1px solid var(--line); border-radius: 12px; padding: 16px; }

    /* Map placeholder (no overlays/debug) */
    .map-placeholder { height: 360px; border-radius: 12px; border: 1px dashed var(--line); display: grid; place-items: center; color: var(--muted); background: #0f1115; }

    /* Footer */
    footer { padding: 28px 0; color: var(--muted); border-top: 1px solid var(--line); }
  </style>
</head>
<body>
  <!-- HEADER -->
  <header class="header" role="navigation" aria-label="Main navigation">
    <div class="container">
      <div class="row">
        <div class="brand" aria-label="VeganMapAI">
          <span class="dot" aria-hidden="true"></span>
          <span>VeganMapAI</span>
        </div>

        <nav id="desktopNav">
          <a href="#map" class="nav-link" data-spy>Map</a>
          <a href="#features" class="nav-link" data-spy>Features</a>
          <a href="#api" class="nav-link" data-spy>API</a>
          <a href="#contact" class="nav-link" data-spy>Contact</a>
        </nav>

        <div style="display:flex; gap:8px; align-items:center;">
          <!-- Minimal AI Search button -->
          <a href="/test-map?loc=auto" class="btn btn-ai" id="btn-ai-search" title="Open the map near you">
            <span class="icon" aria-hidden="true"></span>
            <span>Search</span>
          </a>
          <!-- Primary auth CTA (also routes to map for now, as requested) -->
          <a href="/test-map?loc=auto" class="btn btn-primary" id="btn-signin">Sign in</a>

          <button class="menu-btn" id="menuBtn" aria-expanded="false" aria-controls="mobileMenu">Menu</button>
        </div>
      </div>
    </div>
    <div id="mobileMenu" class="mobile-menu" role="menu" aria-label="Mobile Menu">
      <a href="#map" data-spy>Map</a>
      <a href="#features" data-spy>Features</a>
      <a href="#api" data-spy>API</a>
      <a href="#contact" data-spy>Contact</a>
    </div>
  </header>

  <!-- HERO -->
  <section class="hero">
    <div class="container hero-grid">
      <div>
        <h1>Find the best vegan spots around you</h1>
        <p>Objective, transparent scoring and fast filters. One tap to open nearby places.</p>
        <div class="hero-ctas">
          <a href="/test-map?loc=auto" class="btn btn-ai">Search</a>
          <a href="/test-map?loc=auto" class="btn btn-primary">Sign in</a>
        </div>
      </div>
    </div>
  </section>

  <!-- MAP SECTION (no extra overlays) -->
  <section id="map" aria-label="Map">
    <div class="container">
      <h2 class="section-title">Map</h2>
      <div class="card">
        <div class="map-placeholder">Map loads here (/test-map?loc=auto)</div>
      </div>
    </div>
  </section>

  <!-- FEATURES -->
  <section id="features" aria-label="Features">
    <div class="container">
      <h2 class="section-title">Features</h2>
      <div class="card">
        <ul>
          <li>Vegan Score with transparent breakdown</li>
          <li>Interactive markers and clean popovers</li>
          <li>Fast filters and favorites</li>
        </ul>
      </div>
    </div>
  </section>

  <!-- API -->
  <section id="api" aria-label="API">
    <div class="container">
      <h2 class="section-title">API</h2>
      <div class="card">
        <p>Vegan Score API for restaurants and travel apps.</p>
      </div>
    </div>
  </section>

  <!-- CONTACT -->
  <section id="contact" aria-label="Contact">
    <div class="container">
      <h2 class="section-title">Contact</h2>
      <div class="card">
        <p>Write us at <a href="mailto:hello@veganmapai.ai">hello@veganmapai.ai</a></p>
      </div>
    </div>
  </section>

  <footer>
    <div class="container">© 2025 VeganMapAI</div>
  </footer>

  <script>
    // Smooth scroll (only for same-page sections)
    document.querySelectorAll('a[href^="#"]').forEach(a => {
      a.addEventListener('click', e => {
        const id = a.getAttribute('href');
        const el = document.querySelector(id);
        if (el) { e.preventDefault(); el.scrollIntoView({ behavior: 'smooth', block: 'start' }); }
      });
    });

    // Scrollspy for active nav links
    const sections = [...document.querySelectorAll('section[id]')];
    const navLinks = [...document.querySelectorAll('[data-spy]')];
    const setActive = id => { navLinks.forEach(l => l.classList.toggle('active', l.getAttribute('href') === '#' + id)); };
    const io = new IntersectionObserver(entries => {
      entries.forEach(entry => { if (entry.isIntersecting) setActive(entry.target.id); });
    }, { rootMargin: '-40% 0px -55% 0px', threshold: 0.01 });
    sections.forEach(s => io.observe(s));

    // Mobile menu toggle
    const menuBtn = document.getElementById('menuBtn');
    const mobileMenu = document.getElementById('mobileMenu');
    menuBtn?.addEventListener('click', () => {
      const open = mobileMenu.classList.toggle('open');
      menuBtn.setAttribute('aria-expanded', open ? 'true' : 'false');
    });
  </script>
</body>
</html>